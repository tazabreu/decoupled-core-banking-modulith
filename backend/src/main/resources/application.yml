spring:
  application:
    name: decoupled-core-banking-modulith

  datasource:
    hikari:
      maximum-pool-size: 20
      minimum-idle: 5
    password: c0r3b4nk1ng
    url: jdbc:postgresql://localhost:5432/corebanking
    username: corebanking_app

  graphql:
    graphiql:
      enabled: true

  jpa:
    hibernate:
      ddl-auto: validate
    open-in-view: false
    properties:
      hibernate:
        jdbc:
          time_zone: UTC

  modulith:
    events:
      jdbc:
        schema-initialization:
          enabled: true
      republish-outstanding-events-on-restart: true

  threads:
    virtual:
      enabled: true
  data:
    redis:
      host: localhost
      port: 6379
      database: 0
      timeout: 2000
      connect-timeout: 2000
      lettuce:
        pool:
          max-active: 8
          max-idle: 8
          min-idle: 2
          max-wait: 1000ms
        shutdown-timeout: 100ms

logging:
  pattern:
    console: "%d{HH:mm:ss.SSS} %highlight(%-5level) [%green(${spring.application.name:})] [%thread] [%green(%X{traceId:-}, %X{spanId:-})] %blue(%-40.40logger{39}) : %msg%n"
management:
  endpoint:
    health:
      probes:
        enabled: true
      show-details: always
  endpoints:
    web:
      exposure:
        include: "health,metrics,prometheus,flyway"
  metrics:
    export:
      otlp:
        enabled: true
        endpoint: http://localhost:4318/v1/metrics
    tags:
      application: ${spring.application.name}
  tracing:
    sampling:
      probability: 1.0
    baggage:
      correlation:
        enabled: true

  otlp:
    metrics:
      export:
        enabled: true
        step: 10s
#        url: http://localhost:4317
        url: http://localhost:4318/v1/metrics
    tracing:
      endpoint: http://localhost:4318/v1/traces

resilience4j:
  circuitbreaker:
    instances:
      queue-operation:
        automaticTransitionFromOpenToHalfOpenEnabled: true
        failureRateThreshold: 50
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED
        waitDurationInOpenState: 10s
      transfer-processing:
        automaticTransitionFromOpenToHalfOpenEnabled: true
        failureRateThreshold: 50
        permittedNumberOfCallsInHalfOpenState: 3
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED
        waitDurationInOpenState: 10s
  retry:
    instances:
      queue-operation:
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
        maxAttempts: 3
        retryExceptions:
          - java.lang.RuntimeException
        waitDuration: 1s
      transfer-processing:
        enableExponentialBackoff: true
        exponentialBackoffMultiplier: 2
        maxAttempts: 3
        retryExceptions:
          - java.lang.RuntimeException
        waitDuration: 1s
  bulkhead:
    instances:
      batch-processing:
        maxConcurrentCalls: 2
        maxWaitDuration: 1s
  timelimiter:
    instances:
      batch-processing:
        timeoutDuration: 5s
        cancelRunningFuture: true

server:
  port: ${SERVER_PORT:8080}
  shutdown: graceful


service:
  max:
    batch:
      size: 10
      wait:
        time: 1000
  lock:
    timeout: 30